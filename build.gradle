apply plugin: 'idea'
apply plugin: 'jacoco'

buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }

    dependencies {
        classpath 'org.kt3k.gradle.plugin:coveralls-gradle-plugin:2.0.0'
    }
}

apply plugin: 'com.github.kt3k.coveralls'

version = '0.0.2'

subprojects {
    apply plugin: 'java'
    apply plugin: 'jacoco'

    group = 'pl.edu.pw.ii.BpmConsole'
    sourceCompatibility = 1.8
    version = '0.0.2'

    repositories {
        mavenCentral()
    }
    
    dependencies {
        
    }

    jacocoTestReport {
        dependsOn test
    }
}

project(':bpm-console-interfaces') {
    dependencies {
        compile project(':bpm-console-value-objects')
    }
}

project(':bpm-console-activiti-driver') {
    dependencies {
        compile project(':bpm-console-interfaces')
    }
}

project(':bpm-console-rest') {
    dependencies {
        compile project(':bpm-console-activiti-driver')
    }
}


task mergeCodeCoverage(type: JacocoMerge) {
    dependsOn subprojects.jacocoTestReport
    jacocoClasspath = jacocoClasspath = project(":bpm-console-rest").configurations.jacocoAnt +
            project(":bpm-console-rest").sourceSets.test.runtimeClasspath
    destinationFile = file("$buildDir/jacoco/test.exec")
    doFirst { delete destinationFile }
    executionData tasks.getByPath(":bpm-console-rest:test")
}

task aggregateCodeCoverage(type: JacocoReport) {
    jacocoClasspath = jacocoClasspath = mergeCodeCoverage.jacocoClasspath
    dependsOn mergeCodeCoverage
    executionData mergeCodeCoverage.destinationFile
    subprojects.each { sub ->
        sourceSets sub.sourceSets.main
    }

    reports {
        html.enabled = true
        xml.enabled = true
        csv.enabled = false
        html.destination "${buildDir}/jacocoHtml"
        xml.destination "${buildDir}/reports/jacoco/test/jacocoTestReport.xml"
    }
}



task wrapper(type: Wrapper) {
    gradleVersion = '2.1'
}